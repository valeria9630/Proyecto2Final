/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cr.ac.ucr.if3000.biblioteca.gui;

import cr.ac.ucr.if3000.biblioteca.domain.Autor;
import cr.ac.ucr.if3000.biblioteca.domain.Biblioteca;
import cr.ac.ucr.if3000.biblioteca.domain.Catalogo;
import cr.ac.ucr.if3000.biblioteca.domain.Persona;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.nio.charset.CodingErrorAction;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ValeriaLeivaQuirós
 */
public class BuscarObra extends javax.swing.JFrame {

    Biblioteca biblioteca;
    DefaultTableModel modelo;
    TableRowSorter trs;
    Persona personaAutor;

    String tipoInterfaz;

    /**
     * Creates new form Cátalogo
     */
    public BuscarObra() {
        modelo = new DefaultTableModel();
        biblioteca = new Biblioteca();

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        modelo.addColumn("codigo");
        modelo.addColumn("Titulo");
        modelo.addColumn("Estado");
        modelo.addColumn("Autor");

        for (int i = 0; i < biblioteca.getCatalogos().size(); i++) {
            Catalogo catalogo = biblioteca.getCatalogos().get(i);
            if (catalogo.getPrestamo() != null) {
                modelo.addRow(new Object[]{catalogo.getCodigoCatalogo(), catalogo.getTitulo(), "Prestado", catalogo.getAutor()});
            } else {
                modelo.addRow(new Object[]{catalogo.getCodigoCatalogo(), catalogo.getTitulo(), "Diponible", catalogo.getAutor()});

            }

            this.jTableListaObras.setModel(modelo);

        }
        
        jTableListaObras.addMouseListener(new MouseAdapter() {
         public void mousePressed(MouseEvent me) { 
        int seleccionado =  (int) jTableListaObras.getValueAt(jTableListaObras.getSelectedRow(), 0);
       jTextArea1.setText(biblioteca.buscaCatalogoPorCodigo(seleccionado));
         }
        });
    }

    /**
     *
     * @param persona
     */
    public BuscarObra(Persona persona, String tipo) {
        modelo = new DefaultTableModel();
        biblioteca = new Biblioteca();
        tipoInterfaz = tipo;
        personaAutor = persona;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        jButtonRealizarPrestamo.setVisible(false);

        modelo.addColumn("codigo");
        modelo.addColumn("Titulo");
        modelo.addColumn("Fecha de Ingreso");
        modelo.addColumn("Autor");
        System.out.println(personaAutor.toString());
        for (int i = 0; i < biblioteca.getCatalogos().size(); i++) {

            Catalogo catalogo = biblioteca.getCatalogos().get(i);
            System.out.println(catalogo.toString());
            if (catalogo.getAutor() != null) {
                if (catalogo.getAutor().getIdentificacion().equalsIgnoreCase(personaAutor.getIdentificacion())) {
                    modelo.addRow(new Object[]{catalogo.getCodigoCatalogo(), catalogo.getTitulo(), catalogo.getFechaIngreso(), catalogo.getAutor()});
                }

            }
            this.jTableListaObras.setModel(modelo);

        }

    }

    public BuscarObra(String tipo) {
        modelo = new DefaultTableModel();
        biblioteca = new Biblioteca();

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        jButtonRealizarPrestamo.setVisible(false);
        tipoInterfaz = tipo;
        modelo.addColumn("codigo");
        modelo.addColumn("Titulo");
        modelo.addColumn("Estado");
        modelo.addColumn("Autor");

        for (int i = 0; i < biblioteca.getCatalogos().size(); i++) {
            Catalogo catalogo = biblioteca.getCatalogos().get(i);
            if (catalogo.getPrestamo() != null) {
                modelo.addRow(new Object[]{catalogo.getCodigoCatalogo(), catalogo.getTitulo(), "Prestado", catalogo.getAutor()});
            } else {
                modelo.addRow(new Object[]{catalogo.getCodigoCatalogo(), catalogo.getTitulo(), "Diponible", catalogo.getAutor()});

            }
            this.jTableListaObras.setModel(modelo);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelBuscarObra = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaObras = new javax.swing.JTable();
        jLabelBuscarPorTitulo = new javax.swing.JLabel();
        jTextFieldBuscarPorTitulo = new javax.swing.JTextField();
        jLabelBuscarPorAutor = new javax.swing.JLabel();
        jButtonRealizarPrestamo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextFieldBuscarPorAutor = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buscar Obra");

        jLabelBuscarObra.setFont(new java.awt.Font("Yu Gothic", 0, 14)); // NOI18N
        jLabelBuscarObra.setForeground(new java.awt.Color(0, 51, 255));
        jLabelBuscarObra.setText("Buscar Obra");

        jTableListaObras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jTableListaObras.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jTableListaObras.setForeground(new java.awt.Color(0, 51, 255));
        jTableListaObras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableListaObras);

        jLabelBuscarPorTitulo.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelBuscarPorTitulo.setForeground(new java.awt.Color(0, 51, 255));
        jLabelBuscarPorTitulo.setText("Buscar obra por titulo:");

        jTextFieldBuscarPorTitulo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jTextFieldBuscarPorTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarPorTituloActionPerformed(evt);
            }
        });
        jTextFieldBuscarPorTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloKeyTyped(evt);
            }
        });

        jLabelBuscarPorAutor.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabelBuscarPorAutor.setForeground(new java.awt.Color(0, 51, 255));
        jLabelBuscarPorAutor.setText("Buscar obra por autor:");

        jButtonRealizarPrestamo.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jButtonRealizarPrestamo.setForeground(new java.awt.Color(0, 51, 255));
        jButtonRealizarPrestamo.setText("Realizar Prestamo");
        jButtonRealizarPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRealizarPrestamoActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cr/ac/ucr/if3000/biblioteca/Imagenes/sign-out.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldBuscarPorAutor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jTextFieldBuscarPorAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarPorAutorActionPerformed(evt);
            }
        });
        jTextFieldBuscarPorAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorAutorKeyTyped(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(0, 102, 102));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelBuscarObra)
                        .addGap(333, 333, 333))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelBuscarPorAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldBuscarPorTitulo)
                                            .addComponent(jTextFieldBuscarPorAutor)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButtonRealizarPrestamo))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(87, 87, 87)
                                                .addComponent(jLabelBuscarPorTitulo)
                                                .addGap(25, 25, 25)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(21, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabelBuscarObra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelBuscarPorTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBuscarPorTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabelBuscarPorAutor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBuscarPorAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRealizarPrestamo)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRealizarPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRealizarPrestamoActionPerformed
        int codigo;
        codigo = ((int) modelo.getValueAt(jTableListaObras.getSelectedRow(), 0));

        System.out.println(codigo);

        RegistrarPrestamo registrarPrestamo = new RegistrarPrestamo(codigo);
        registrarPrestamo.setVisible(true);

        dispose();


    }//GEN-LAST:event_jButtonRealizarPrestamoActionPerformed

    private void jTextFieldBuscarPorTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloKeyTyped
        jTextFieldBuscarPorTitulo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(jTextFieldBuscarPorTitulo.getText(), 1));
            }

        });

        trs = new TableRowSorter(modelo);
        jTableListaObras.setRowSorter(trs);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (tipoInterfaz.equalsIgnoreCase("MenuUsuario")) {
            MenuUsuario menuUsuario = new MenuUsuario();
            menuUsuario.setVisible(true);
            dispose();

        }

        if (tipoInterfaz.equalsIgnoreCase("MantenimientoAutores")) {
            MantenimentoAutores mantenimentoAutores = new MantenimentoAutores();
            mantenimentoAutores.setVisible(true);
            dispose();

        }
        if (tipoInterfaz.equalsIgnoreCase("MenuAutor")) {
            MenuAutor menuAutor = new MenuAutor();
            menuAutor.setVisible(true);
            dispose();

        }
        if (tipoInterfaz.equalsIgnoreCase("MenuBibliotecologo")) {
            MenuBibliotecologo menuBibliotecologo = new MenuBibliotecologo();
            menuBibliotecologo.setVisible(true);
            dispose();

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldBuscarPorAutorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorAutorKeyTyped
        jTextFieldBuscarPorAutor.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(jTextFieldBuscarPorAutor.getText(), 3));
            }

        });

        trs = new TableRowSorter(modelo);
        jTableListaObras.setRowSorter(trs);
    }//GEN-LAST:event_jTextFieldBuscarPorAutorKeyTyped

    private void jTextFieldBuscarPorAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscarPorAutorActionPerformed

    private void jTextFieldBuscarPorTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscarPorTituloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarObra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarObra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarObra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarObra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscarObra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonRealizarPrestamo;
    private javax.swing.JLabel jLabelBuscarObra;
    private javax.swing.JLabel jLabelBuscarPorAutor;
    private javax.swing.JLabel jLabelBuscarPorTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableListaObras;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldBuscarPorAutor;
    private javax.swing.JTextField jTextFieldBuscarPorTitulo;
    // End of variables declaration//GEN-END:variables

}
